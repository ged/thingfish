#!/usr/bin/env ruby

BEGIN {
	$LOAD_PATH.unshift( 'lib' )
}

require 'etc'
require 'pathname'
require 'rbconfig'
require 'utils'
require 'thingfish'
require 'thingfish/daemon'
require 'thingfish/config'

include UtilityFunctions

# This is a little wrapper that starts thingfishd with the config in
# etc/thingfish.conf-testing, like run did originally.

plugin_libs = Pathname.glob( 'plugins/*/lib' )
# puts plugin_libs

plugin_libs.each {|lib| $LOAD_PATH.unshift(lib) }
suffix = nil
if user = Etc.getpwuid( Process.euid )
	suffix = user.name
	puts "Config file suffix is: %p" % [ suffix ]
else
	suffix = 'testing'
end

config = nil
configfile = "etc/thingfish.conf-#{suffix}"
if File.exist?( configfile )
	config = ThingFish::Config.load( configfile )
else
	header( 'Attention!' )
	divider
	message( <<-EOH )
You are running a developer script that is not intended for production use.

For information on how to get started with ThingFish, please see the
QUICKSTART document, and/or the 'Getting Started' section of the manual.

If you are interested in using this script for development, just
create a ThingFish configuration file at #{configfile}!

HAVE A PLEASANT DAY. 
	EOH
	divider
	exit 64
end

instance = ThingFish::Daemon.new( config )
accepter = instance.run

Signal.trap( "INT" ) { instance.shutdown("Interrupted") }
Signal.trap( "TERM" ) { instance.shutdown("Terminated") }

accepter.join

