#!/usr/bin/env ruby
# 
# This is a little wrapper that starts thingfishd with a user-specific
# config file. It first tries to look up your usename using the 'etc'
# library, and if that succeeds it looks for a config file in
# etc/thingfish.conf-<your username>. If the username lookup fails
# for some reason, it falls back to etc/thingfish.conf-testing. If
# the config file doesn't exist, it will advise you about what file
# it's looking for and exit.
# 
# This script is purely for development -- it modifies the $LOAD_PATH
# to allow one to start the server without having the plugin libraries
# installed. The intended production installation will use RubyGems
# to install the necessary libraries and command-line scripts in the
# correct places, allowing one to use the `thingfishd` script to start
# the server with no further necessary incantations.
# 

BEGIN {
	$LOAD_PATH.unshift( 'lib' )
}

require 'rubygems'
require 'etc'
require 'pathname'
require 'rbconfig'
require 'utils'
require 'thingfish'
require 'thingfish/daemon'
require 'thingfish/config'

include UtilityFunctions

plugin_libs = Pathname.glob( 'plugins/*/lib' )
# puts plugin_libs

plugin_libs.each {|lib| $LOAD_PATH.unshift(lib) }
suffix = nil
if user = Etc.getpwuid( Process.euid )
	suffix = user.name
	puts "Config file suffix is: %p" % [ suffix ]
else
	suffix = 'testing'
end

config = nil
configfile = ARGV.shift || "etc/thingfish.conf-#{suffix}"
if File.exist?( configfile )
	config = ThingFish::Config.load( configfile )
else
	header( 'Attention!' )
	divider
	message( <<-EOH )
You are running a developer script that is not intended for production use.

For information on how to get started with ThingFish, please see the
QUICKSTART document, and/or the 'Getting Started' section of the manual.

If you are interested in using this script for development, just
create a ThingFish configuration file at #{configfile}!

HAVE A PLEASANT DAY. 
	EOH
	divider
	exit 64
end

ThingFish::Daemon.new( config ).start
