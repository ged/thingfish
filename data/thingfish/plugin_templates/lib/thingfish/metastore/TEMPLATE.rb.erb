#!/usr/bin/env ruby

require 'thingfish'
require 'thingfish/mixins'
require 'thingfish/metastore/simple'

#
# A <%= @name %> metastore plugin for ThingFish.
#
# == Synopsis
#
#   # thingfish.conf
#   plugins:
#     metastore:
#		name: <%= @name %>
# 
# == Version
#
#  $Id$
#
# == Authors
#
#  * <%= @options.author %>
#
# :include: LICENSE
#
#---
#
# Please see the file LICENSE in the base directory for licensing details.
#
class ThingFish::<%= @name.capitalize %>MetaStore < ThingFish::SimpleMetaStore
	include ThingFish::Loggable,
		ThingFish::Constants

	### Plugin version constant
	VERSION = '0.0.1'


	######
	public
	######

	### MetaStore API: Set the property associated with +uuid+ specified by 
	### +propname+ to the given +value+.
	def set_property( uuid, propname, value )
		# :TODO: Implement #set_property
	end

	
	### MetaStore API: Return the property associated with +uuid+ specified by 
	### +propname+. Returns +nil+ if no such property exists.
	def get_property( uuid, propname )
		# :TODO: Implement #get_property
	end

	
	### MetaStore API: Get the set of properties associated with the given +uuid+ as
	### a hashed keyed by property names as symbols.
	def get_properties( uuid )
		# :TODO: Implement #get_properties
	end


	### MetaStore API: Returns +true+ if the given +uuid+ has a property +propname+.
	def has_property?( uuid, propname )
		# :TODO: Implement #has_property?
	end


	### MetaStore API: Removes +propname+ from given +uuid+
	def delete_property( uuid, propname )
		# :TODO: Implement #delete_property
	end
	
	
	### MetaStore API: Removes all properties from given +uuid+
	def delete_properties( uuid )
		# :TODO: Implement #delete_properties
	end

	### MetaStore API: Return all property keys in store
	def get_all_property_keys
		# :TODO: Implement #get_all_property_keys
	end
	
	
	### MetaStore API: Return a uniquified Array of all values in the metastore for
	### the specified +key+.
	def get_all_property_values( key )
		# :TODO: Implement #get_all_property_values
	end
	
	
	### MetaStore API: Return an array of UUIDs whose metadata exactly matches the
	### key-value pairs in +hash+.
	def find_by_exact_properties( hash )
		# :TODO: Implement #find_by_exact_properties
	end


	### MetaStore API: Return an array of UUIDs whose metadata wildcard matches the
	### key-value pairs in +hash+.
	def find_by_matching_properties( hash )
		# :TODO: Implement #find_by_matching_properties
	end
		
end # class ThingFish::<%= @name.capitalize %>MetaStore

# vim: set nosta noet ts=4 sw=4:

